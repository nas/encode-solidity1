/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Random, RandomInterface } from "../Random";

const _abi = [
  {
    inputs: [],
    name: "getRandomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tossCoin",
    outputs: [
      {
        internalType: "bool",
        name: "heads",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061019c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b41e8cad1461003b578063dbdff2c114610059575b600080fd5b610043610077565b60405161005091906100b7565b60405180910390f35b610061610094565b60405161006e91906100eb565b60405180910390f35b6000806002610084610094565b61008e9190610135565b14905090565b600044905090565b60008115159050919050565b6100b18161009c565b82525050565b60006020820190506100cc60008301846100a8565b92915050565b6000819050919050565b6100e5816100d2565b82525050565b600060208201905061010060008301846100dc565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610140826100d2565b915061014b836100d2565b92508261015b5761015a610106565b5b82820690509291505056fea2646970667358221220bd1eca202bd079a5b3b1ce7acb7625aabe4d1234f8a510bef01f767786c3f72864736f6c63430008120033";

type RandomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Random__factory extends ContractFactory {
  constructor(...args: RandomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Random> {
    return super.deploy(overrides || {}) as Promise<Random>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Random {
    return super.attach(address) as Random;
  }
  override connect(signer: Signer): Random__factory {
    return super.connect(signer) as Random__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomInterface {
    return new utils.Interface(_abi) as RandomInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Random {
    return new Contract(address, _abi, signerOrProvider) as Random;
  }
}
