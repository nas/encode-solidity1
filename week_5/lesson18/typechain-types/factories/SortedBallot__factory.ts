/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SortedBallot, SortedBallotInterface } from "../SortedBallot";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proposalNames",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sortProposals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107693803806107698339818101604052810190610032919061026c565b60005b81518110156100c2576000604051806040016040528084848151811061005e5761005d6102b5565b5b60200260200101518152602001600081525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505080806100ba9061031d565b915050610035565b5050610365565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61012b826100e2565b810181811067ffffffffffffffff8211171561014a576101496100f3565b5b80604052505050565b600061015d6100c9565b90506101698282610122565b919050565b600067ffffffffffffffff821115610189576101886100f3565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6101b28161019f565b81146101bd57600080fd5b50565b6000815190506101cf816101a9565b92915050565b60006101e86101e38461016e565b610153565b9050808382526020820190506020840283018581111561020b5761020a61019a565b5b835b81811015610234578061022088826101c0565b84526020840193505060208101905061020d565b5050509392505050565b600082601f830112610253576102526100dd565b5b81516102638482602086016101d5565b91505092915050565b600060208284031215610282576102816100d3565b5b600082015167ffffffffffffffff8111156102a05761029f6100d8565b5b6102ac8482850161023e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061032882610313565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361035a576103596102e4565b5b600182019050919050565b6103f5806103746000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063013cf08b1461003b5780637d260bae1461006c575b600080fd5b61005560048036038101906100509190610267565b610076565b6040516100639291906102bc565b60405180910390f35b6100746100aa565b005b6000818154811061008657600080fd5b90600052602060002090600202016000915090508060000154908060010154905082565b60006001905060005b600115610228576000806001846100ca9190610314565b815481106100db576100da610348565b5b90600052602060002090600202016040518060400160405290816000820154815260200160018201548152505090506000838154811061011e5761011d610348565b5b90600052602060002090600202016000015460001c816000015160001c11156101f1576000838154811061015557610154610348565b5b906000526020600020906002020160006001856101729190610314565b8154811061018357610182610348565b5b9060005260206000209060020201600082015481600001556001820154816001015590505080600084815481106101bd576101bc610348565b5b9060005260206000209060020201600082015181600001556020820151816001015590505081806101ed90610377565b9250505b82806101fc90610377565b935050600080549050831061022257600082036102195750610228565b60009150600192505b506100b3565b5050565b600080fd5b6000819050919050565b61024481610231565b811461024f57600080fd5b50565b6000813590506102618161023b565b92915050565b60006020828403121561027d5761027c61022c565b5b600061028b84828501610252565b91505092915050565b6000819050919050565b6102a781610294565b82525050565b6102b681610231565b82525050565b60006040820190506102d1600083018561029e565b6102de60208301846102ad565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061031f82610231565b915061032a83610231565b9250828203905081811115610342576103416102e5565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061038282610231565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036103b4576103b36102e5565b5b60018201905091905056fea26469706673582212206afea2a82498a4a9da92a13e28674b0ab5bc131d754a65adecd003eca99bff4064736f6c63430008110033";

type SortedBallotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SortedBallotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SortedBallot__factory extends ContractFactory {
  constructor(...args: SortedBallotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    proposalNames: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SortedBallot> {
    return super.deploy(
      proposalNames,
      overrides || {}
    ) as Promise<SortedBallot>;
  }
  override getDeployTransaction(
    proposalNames: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(proposalNames, overrides || {});
  }
  override attach(address: string): SortedBallot {
    return super.attach(address) as SortedBallot;
  }
  override connect(signer: Signer): SortedBallot__factory {
    return super.connect(signer) as SortedBallot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SortedBallotInterface {
    return new utils.Interface(_abi) as SortedBallotInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SortedBallot {
    return new Contract(address, _abi, signerOrProvider) as SortedBallot;
  }
}
